/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ERRORUNKNOWN
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DefaultApi {

  /**
   * Return API DOC
   * 
   * Expected answers:
   *   code 200 :  (search results matching criteria)
   *   code 500 :  (Internal error)
   */
  def aPIDOC(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tracun1/HelloWorld_2.0/1.0.0", "/home", "application/json")
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](500)
        /**
   * IDN
   * 
   * Expected answers:
   *   code 200 :  (item added)
   *   code 400 :  (invalid input, ticker invalid)
   *   code 409 :  (an existing item already exists)
   */
  def saveTicker(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/Tracun1/HelloWorld_2.0/1.0.0", "/finance/api/v1/stock/newTicker", "application/json")
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](409)
        /**
   * By passing in the appropriate option, you can search for available ticker in the system 
   * 
   * Expected answers:
   *   code 200 :  (search results matching criteria)
   *   code 400 :  (invalid input, ticker not found)
   *   code 500 :  (Internal error)
   * 
   * @param tickers Ticker of stock to fetch
   */
  def serach ticker(tickers: ERRORUNKNOWN): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tracun1/HelloWorld_2.0/1.0.0", "/finance/api/v1/stock/{tickers}", "application/json")
      .withPathParam("tickers", tickers)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](500)
        /**
   * Return all tickers on database
   * 
   * Expected answers:
   *   code 200 :  (search results matching criteria)
   *   code 500 :  (Internal error)
   */
  def serachAllStocks(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tracun1/HelloWorld_2.0/1.0.0", "/finance/api/v1/stock", "application/json")
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](500)
      

}

